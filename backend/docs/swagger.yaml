basePath: /
definitions:
  models.EmployeeUpdate:
    properties:
      login:
        type: string
      name:
        type: string
      salary:
        type: number
    required:
    - login
    - name
    - salary
    type: object
host: localhost:4000
info:
  contact:
    email: geraldpng@gmail.com
    name: Developers
  description: REST API for TechHunt2020 Task - HR Employee Salary Management
  license: {}
  title: TechHunt 2020 Backend
  version: 0.0.1
paths:
  /users:
    get:
      description: Search employee data
      parameters:
      - description: Minimum salary
        in: query
        name: minSalary
        required: true
        type: number
      - description: Maximum salary
        in: query
        name: maxSalary
        required: true
        type: number
      - description: Offset results
        in: query
        name: offset
        required: true
        type: number
      - description: Number of results
        in: query
        name: limit
        required: true
        type: number
      - description: Sort by parameter, etc +name, -login
        enum:
        - +name
        - -name
        - +login
        - -login
        - +id
        - -id
        - +salary
        - -salary
        in: query
        name: sort
        required: true
        type: string
      produces:
      - application/json
      summary: Search employee data
      tags:
      - employees
  /users/{employeeID}:
    delete:
      description: Delete employee from db by employee id
      parameters:
      - description: Employee ID
        in: path
        name: employeeID
        required: true
        type: string
      produces:
      - application/json
      summary: Delete employee
      tags:
      - employees
    patch:
      description: Update employee from db by employee id
      parameters:
      - description: Employee ID
        in: path
        name: employeeID
        required: true
        type: string
      - description: Employee details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.EmployeeUpdate'
      produces:
      - application/json
      summary: Update employee
      tags:
      - employees
  /users/upload:
    post:
      consumes:
      - application/json
      description: Uploads csv, and bulk upserts employee data in db
      parameters:
      - description: Employee CSV
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      summary: Bulk upserts employee data
      tags:
      - employees
swagger: "2.0"
